{"version":3,"sources":["GlobeController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["const {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class GlobeController extends cc.Component {\n\n    //#region Property\n\n    @property(cc.Node)\n    WorldMaps: cc.Node = null;\n    @property(cc.Node)\n    WorldMap1: cc.Node = null;\n    @property(cc.Node)\n    WorldMap2: cc.Node = null;\n\n    @property(cc.Node)\n    CaptureArea: cc.Node = null;\n\n    @property(cc.Sprite)\n    MonitorSprite: cc.Sprite = null;\n\n    @property(dragonBones.ArmatureDisplay)\n    globe: dragonBones.ArmatureDisplay = null;\n    \n    @property(cc.Node)\n    GlobePanel: cc.Node = null;\n\n    @property(cc.Label)\n    debug_label: cc.Label = null;\n\n    @property(cc.Node)\n    CityNodeTemplate: cc.Node = null;\n\n    @property(cc.Label)\n    CityLabelTemplate: cc.Label = null;\n\n    @property(cc.Node)\n    CityNodePanel1: cc.Node = null;\n\n    @property(cc.Node)\n    CityNodePanel2: cc.Node = null;\n\n    @property(cc.Node)\n    CityLabelPanel: cc.Node = null;\n\n    CAM:cc.Camera = null;\n    RTXT:cc.RenderTexture = null;\n\n    MapSwitchThreshold:number = 200;\n\n    CityNodeList1 = new Array<cc.Node>();\n    CityNodeList2 = new Array<cc.Node>();\n    CityLabelList = new Array<cc.Node>();\n\n    //#endregion\n\n    //#region Lifecycle\n\n    onLoad () {\n        this.RegisterTouchEvent();\n    }\n\n    start () {\n        // this.SF = this.FullWorldMap.spriteFrame;\n        // this.TX = this.globe.dragonAtlasAsset.texture;\n        // this.CaptureArea.setPosition(this.FullWorldMap.node.position);\n        \n        this.WorldMaps.scaleY = -1;\n        this.LoadCity();\n    }\n\n    //#endregion\n\n    //#region Globe\n\n    UpdateGlobe(){\n        // this.FullWorldMap.node.setPosition(this.FullWorldMap.node.position.x + 30, this.FullWorldMap.node.position.y);\n        \n        if (this.RTXT == null) {\n            this.RTXT = new cc.RenderTexture();\n            this.RTXT.initWithSize(1000, 1000);\n        }\n        \n        if (this.CAM == null) {\n            this.CAM = this.CaptureArea.addComponent(cc.Camera);\n        }\n        this.CAM.targetTexture = this.RTXT;\n        this.CAM.render(this.WorldMaps);\n\n        let sf = new cc.SpriteFrame(this.RTXT);\n        this.MonitorSprite.spriteFrame = sf;\n\n        let data = new dragonBones.DragonBonesAtlasAsset();\n        data.texture = this.RTXT;\n        data.atlasJson =  `\n            {\"width\":960,\"height\":640,\n            \"SubTexture\":[{\"name\":\"WorldMap\",\"x\":100,\"y\":100,\"width\":300,\"height\":300}],\n            \"name\":\"NewProject\",\"imagePath\":\"NewProject_tex.png\"}\n            `;\n        this.globe.dragonAtlasAsset = data;\n    }\n\n    //#endregion\n\n    //#region City\n\n    LoadCity(){\n        this.AddCityNode(\"city1\", 100, 200);\n        this.AddCityNode(\"city2\", 300, -100);\n        this.AddCityNode(\"city3\", 0, 0);\n        this.AddCityNode(\"city4\", -100, -200);\n        this.AddCityNode(\"city5\", 400, 300);\n        this.AddCityNode(\"city6\", -400, 100);\n        this.AddCityNode(\"city7\", 500, 200);\n        this.AddCityNode(\"city8\", -500, 0);\n        this.AddCityNode(\"city9\", 600, -100);\n\n    }\n\n    AddCityNode(cityName:string, x:number, y:number){\n        let city = cc.instantiate(this.CityNodeTemplate);\n        city.name = cityName;\n        this.CityNodePanel1.addChild(city);\n        city.setPosition(x,y);\n        this.CityNodeList1.push(city);\n\n        city = cc.instantiate(this.CityNodeTemplate);\n        city.name = cityName;\n        this.CityNodePanel2.addChild(city);\n        city.setPosition(x,y);\n        this.CityNodeList2.push(city);\n\n        city = cc.instantiate(this.CityLabelTemplate.node);\n        let label = city.getComponent(cc.Label);\n        label.string = cityName;\n        city.name = cityName;\n        this.CityLabelPanel.addChild(city);\n        city.opacity = 0;\n        this.CityLabelList.push(city);\n\n    }\n\n    //#endregion\n\n    //#region Touch Event\n\n    TouchStartPosition:cc.Vec2 = new cc.Vec2(0,0);\n\n    RegisterTouchEvent(){\n        // touch start\n        this.node.on(cc.Node.EventType.TOUCH_START, \n            (e)=>{\n                \n            }, this);\n\n        // touch move\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, \n            (e)=>{\n                let delta:cc.Vec2 = e.touch.getDelta();\n                this.SetMapPosition(delta);\n            }, this);\n\n        // touch end\n        this.node.on(cc.Node.EventType.TOUCH_END, \n            (e)=>{\n            }, this);\n    }\n\n    SetMapPosition(delta:cc.Vec2){\n        this.WorldMaps.setPosition(this.WorldMaps.position.x + delta.x, 0);\n        // this.debug_label.string = this.WorldMaps.position.x.toString();\n\n        let offset = this.WorldMaps.position.x % 2000;\n\n        // this.debug_label.string = this.WorldMaps.position.x.toString() + \"\\n\" + offset.toString();\n\n        this.WorldMaps.setPosition(offset,0);\n        if (offset > this.MapSwitchThreshold) {\n            this.WorldMap2.setPosition(this.WorldMap1.position.x - 2000, 0);\n        }\n        else {//if(offset < 0 - this.MapSwitchThreshold) {\n            this.WorldMap2.setPosition(this.WorldMap1.position.x + 2000, 0);\n        }\n\n        this.UpdateGlobe();\n        this.UpdateCities(delta);\n    }\n\n    UpdateCities(delta:cc.Vec2){\n        // visibility\n        let str = \"\";\n        for (let city of this.CityNodeList1) {\n            this.UpdateCity(city);\n        }\n    }\n\n    UpdateCity(city:cc.Node){\n        let opacity = city.opacity;\n\n        // city node list 1\n        let worldMap = city.getParent().getParent();\n        let distance_H = city.position.x + worldMap.position.x + this.WorldMaps.position.x;\n        let angle_H = (distance_H / 1000) * Math.PI;\n        let angle_V = (city.position.y / 1000) * Math.PI;\n        let distance_V = Math.sin(angle_V) * 320;\n        let radius = Math.cos(angle_V) * 320;\n        city.opacity = Math.abs(distance_H) > 500 ? 0 : 255;\n\n        // city node list 2\n        for (let node of this.CityNodeList2) {\n            if (node.name == city.name) {\n                let worldMap = node.getParent().getParent();\n                let distance = node.position.x + worldMap.position.x + this.WorldMaps.position.x;\n                node.opacity = Math.abs(distance) > 500 ? 0 : 255;\n                opacity += node.opacity;\n                break;\n            }\n        }\n\n        // city label list\n        for (let node of this.CityLabelList) {\n            if (node.name == city.name) {\n                let offset_H = Math.sin(angle_H) * radius;\n                node.setPosition(offset_H, distance_V);\n                let scale = (1 + Math.abs(Math.cos(angle_H))) / 2;\n                node.setScale(scale);\n                node.opacity = opacity > 0 ? scale * 255 : 0;\n                break;\n            }\n        }\n    }\n\n    //#endregion\n\n    //#region Test\n\n    Test2(){\n        let delta:cc.Vec2 = new cc.Vec2(-190,0);\n        this.SetMapPosition(delta);\n    }\n\n    Test3(){\n        // this.dragon.dragonAtlasAsset = null;\n        this.GlobePanel.setScale(this.GlobePanel.scale + 0.1);\n    }\n\n    //#endregion\n}\n"]}
{"version":3,"sources":["../../../../assets/Script/assets/Script/GlobeController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["const {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class GlobeController extends cc.Component {\n\n    //#region Property\n\n    @property(cc.Node)\n    WorldMaps: cc.Node = null;\n    @property(cc.Node)\n    WorldMap1: cc.Node = null;\n    @property(cc.Node)\n    WorldMap2: cc.Node = null;\n\n    @property(cc.Node)\n    CaptureArea: cc.Node = null;\n\n    @property(cc.Sprite)\n    MonitorSprite: cc.Sprite = null;\n\n    @property(dragonBones.ArmatureDisplay)\n    globe: dragonBones.ArmatureDisplay = null;\n    \n    @property(cc.Node)\n    GlobePanel: cc.Node = null;\n\n    @property(cc.Label)\n    debug_label: cc.Label = null;\n\n    @property(cc.Node)\n    CityNodeTemplate: cc.Node = null;\n\n    @property(cc.Node)\n    CityLabelTemplate: cc.Node = null;\n\n    @property(cc.Node)\n    CityNodePanel1: cc.Node = null;\n\n    @property(cc.Node)\n    CityNodePanel2: cc.Node = null;\n\n    @property(cc.Node)\n    CityLabelPanel: cc.Node = null;\n    CityLabelOffsetH:number = 0;\n    CityLabelOffsetV:number = 50;\n    CityLabelOffsetV_MAX:number = 50;\n    CITY_LABEL_SCALE_MAX = 1.5;\n\n    CAM:cc.Camera = null;\n    RTXT:cc.RenderTexture = null;\n    MapSwitchThreshold:number = 200;\n\n    CityNodeList1 = new Array<cc.Node>();\n    CityNodeList2 = new Array<cc.Node>();\n    CityLabelList = new Array<cc.Node>();\n\n    GlobeAutoSpinning:boolean = true;\n    GLOBE_AUTO_SPIN_SPEED:number = 20;\n    //#endregion\n\n    //#region Lifecycle\n\n    onLoad () {\n        cc.game.addPersistRootNode(this.node);\n        this.RegisterTouchEvent();\n    }\n\n    start () {\n        // this.SF = this.FullWorldMap.spriteFrame;\n        // this.TX = this.globe.dragonAtlasAsset.texture;\n        // this.CaptureArea.setPosition(this.FullWorldMap.node.position);\n        \n        this.WorldMaps.scaleY = -1;\n        this.LoadCity();\n    }\n\n    update (dt) {\n        if (this.GlobeAutoSpinning) {\n            let delta = this.GLOBE_AUTO_SPIN_SPEED * dt;\n            this.DragMap(delta);\n        }\n    }\n\n    //#endregion\n\n    //#region Globe\n\n    DragMap(delta_x:number){\n        this.WorldMaps.setPosition(this.WorldMaps.position.x + delta_x, 0);\n        this.UpdateFullWorldMap();\n    }\n\n    UpdateFullWorldMap(){\n        let offset = this.WorldMaps.position.x % 2000;\n\n        // this.debug_label.string = this.WorldMaps.position.x.toString() + \"\\n\" + offset.toString();\n\n        this.WorldMaps.setPosition(offset,0);\n        if (offset > this.MapSwitchThreshold) {\n            this.WorldMap2.setPosition(this.WorldMap1.position.x - 2000, 0);\n        }\n        else {//if(offset < 0 - this.MapSwitchThreshold) {\n            this.WorldMap2.setPosition(this.WorldMap1.position.x + 2000, 0);\n        }\n\n        this.UpdateGlobe();\n        this.UpdateCities();\n    }\n\n    UpdateGlobe(){\n        // this.FullWorldMap.node.setPosition(this.FullWorldMap.node.position.x + 30, this.FullWorldMap.node.position.y);\n        \n        if (this.RTXT == null) {\n            this.RTXT = new cc.RenderTexture();\n            this.RTXT.initWithSize(1000, 1000);\n        }\n        \n        if (this.CAM == null) {\n            this.CAM = this.CaptureArea.addComponent(cc.Camera);\n        }\n        this.CAM.targetTexture = this.RTXT;\n        this.CAM.render(this.WorldMaps);\n\n        let sf = new cc.SpriteFrame(this.RTXT);\n        this.MonitorSprite.spriteFrame = sf;\n\n        let data = new dragonBones.DragonBonesAtlasAsset();\n        data.texture = this.RTXT;\n        data.atlasJson =  `\n            {\"width\":2000,\"height\":1000,\n            \"SubTexture\":[{\"name\":\"WorldMap\",\"x\":1,\"y\":1,\"width\":1000,\"height\":1000}],\n            \"name\":\"WorldMapDragon\",\"imagePath\":\"WorldMap.jpg\"}\n            `;\n        this.globe.dragonAtlasAsset = data;\n    }\n\n    UpdateCities(){\n        // visibility\n        let str = \"\";\n        for (let city of this.CityNodeList1) {\n            this.UpdateCity(city);\n        }\n    }\n\n    UpdateCity(city:cc.Node){\n        let opacity = city.opacity;\n\n        // city node list 1\n        let worldMap = city.getParent().getParent();\n        let distance_H = city.position.x + worldMap.position.x + this.WorldMaps.position.x;\n        let angle_H = (distance_H / 1000) * Math.PI;\n        let angle_V = (city.position.y / 1000) * Math.PI;\n        let distance_V = Math.sin(angle_V) * 320;\n        let radius = Math.cos(angle_V) * 320;\n        city.opacity = Math.abs(distance_H) > 500 ? 0 : 255;\n\n        // city node list 2\n        for (let node of this.CityNodeList2) {\n            if (node.name == city.name) {\n                let worldMap = node.getParent().getParent();\n                let distance = node.position.x + worldMap.position.x + this.WorldMaps.position.x;\n                node.opacity = Math.abs(distance) > 500 ? 0 : 255;\n                opacity += node.opacity;\n                break;\n            }\n        }\n\n        // city label list\n        for (let node of this.CityLabelList) {\n            if (node.name == city.name) {\n                let distance_H = Math.sin(angle_H) * radius;\n                let scale = (1 + Math.abs(Math.cos(angle_H))) / 2;\n                let offsetV = this.CityLabelOffsetV * scale;\n                node.setPosition(distance_H + this.CityLabelOffsetH, distance_V + offsetV);\n                node.setScale(scale);\n                node.opacity = scale * (opacity > 0 ? scale * 255 : 0);\n                break;\n            }\n        }\n    }\n\n    OptimizeLabelFontSize(scale: number){\n        if (scale > this.CITY_LABEL_SCALE_MAX) {\n            this.CityLabelOffsetV = this.CityLabelOffsetV_MAX * this.CITY_LABEL_SCALE_MAX / scale;\n            for (let city of this.CityLabelList) {\n                let wrapper = city.getChildByName(\"label_wrapper\");\n                wrapper.setScale(this.CITY_LABEL_SCALE_MAX / scale);\n            }\n        }\n        else{\n            // this.CityLabelOffsetV = this.CityLabelOffsetV_MAX;\n        }\n    }\n\n    GlobeZoom(scale:number){\n        this.GlobePanel.setScale(scale);\n        this.OptimizeLabelFontSize(scale);\n    }\n\n    //#endregion\n\n    //#region City\n\n    LoadCity(){\n        this.AddCityNode(\"北京\", 100, 200);\n        this.AddCityNode(\"斐济\", 300, -100);\n        this.AddCityNode(\"东京\", 0, 0);\n        this.AddCityNode(\"Las Vagas\", -100, -200);\n        this.AddCityNode(\"布宜诺斯艾利斯\", 400, 300);\n        this.AddCityNode(\"Stockholm\", -400, 100);\n        this.AddCityNode(\"莫斯科\", 500, 200);\n        this.AddCityNode(\"巴厘岛\", -500, 0);\n        this.AddCityNode(\"Shenmi Island\", 600, -100);\n\n    }\n\n    AddCityNode(cityName:string, x:number, y:number){\n        let city = cc.instantiate(this.CityNodeTemplate);\n        city.name = cityName;\n        this.CityNodePanel1.addChild(city);\n        city.setPosition(x,y);\n        this.CityNodeList1.push(city);\n\n        city = cc.instantiate(this.CityNodeTemplate);\n        city.name = cityName;\n        this.CityNodePanel2.addChild(city);\n        city.setPosition(x,y);\n        this.CityNodeList2.push(city);\n\n        city = cc.instantiate(this.CityLabelTemplate);\n        let label = city.getComponentInChildren(cc.Label);\n        label.string = cityName;\n        city.name = cityName;\n        this.CityLabelPanel.addChild(city);\n        city.opacity = 0;\n        this.CityLabelList.push(city);\n    }\n\n    CityTapped(city:cc.Node){\n        this.debug_label.string = city.name;\n    }\n\n    //#endregion\n\n    //#region Touch Event\n\n    RegisterTouchEvent(){\n        // touch start\n        this.node.on(cc.Node.EventType.TOUCH_START, \n            (e)=>{\n                this.GlobeAutoSpinning = false;\n                // this.debug_label.string = \"start\" + e.getID().toString();\n                this.TrackTouchPoint(e.touch);\n            }, this);\n\n        // touch move\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, \n            (e)=>{\n                let delta:cc.Vec2 = e.touch.getDelta();\n                if (this.TouchingPoints.length == 1) {\n                    this.DragMap(delta.x);                    \n                }\n                else if (this.TouchingPoints.length == 2) {\n                    this.TouchZoom();\n                }\n            }, this);\n\n        // touch end\n        this.node.on(cc.Node.EventType.TOUCH_END, \n            (e)=>{\n                this.GlobeAutoSpinning = true;\n                // this.debug_label.string = \"end \" + e.getID().toString();\n                this.TryRemoveTouchingPoint(e.touch)\n            }, this);\n\n        // touch cancel\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, \n            (e)=>{\n                this.GlobeAutoSpinning = true;\n                // this.debug_label.string = \"cancel \" + e.getID().toString();\n                this.TryRemoveTouchingPoint(e.touch)\n            }, this);\n\n    }\n\n    TouchingPoints = new Array<any>();\n    TrackTouchPoint(touch:any){\n        this.TouchingPoints.push(touch);\n    }\n\n    TryRemoveTouchingPoint(touch:any){\n        let touch_id = touch.getID();\n        let idx = 0;\n        while (idx < this.TouchingPoints.length) {\n            let id = this.TouchingPoints[idx].getID();\n            if (id == touch_id) {\n                this.TouchingPoints.splice(idx,1);\n                break;\n            }\n            else{\n                idx++;\n            }\n        }\n    }\n\n    TouchZoom(){\n        if (this.TouchingPoints.length == 2) {\n            let old_location_1:cc.Vec2 = this.TouchingPoints[0].getPreviousLocation();\n            let old_location_2:cc.Vec2 = this.TouchingPoints[1].getPreviousLocation();\n            let new_location_1:cc.Vec2 = this.TouchingPoints[0].getLocation();\n            let new_location_2:cc.Vec2 = this.TouchingPoints[1].getLocation();\n\n            let x1 = old_location_1.x - old_location_2.x;\n            let y1 = old_location_1.y - old_location_2.y;\n            let x2 = new_location_1.x - new_location_2.x;\n            let y2 = new_location_1.y - new_location_2.y;\n\n            let old_area = Math.sqrt(Math.pow(x1,2) + Math.pow(y1,2));\n            let new_area = Math.sqrt(Math.pow(x2,2) + Math.pow(y2,2));\n            let factor = new_area/old_area;\n            factor = 1 + (factor - 1) * 0.5; \n            // this.debug_label.string = (new_area/old_area).toString();\n\n            let scale = this.GlobePanel.scale * factor;\n            this.GlobeZoom(scale);\n        }\n    }\n\n    //#endregion\n\n    //#region Test\n\n    Test2(){\n        // let delta:cc.Vec2 = new cc.Vec2(-190,0);\n        // this.DragMap(delta.x);\n        this.GlobeZoom(this.GlobePanel.scale - 0.1);\n    }\n\n    Test3(){\n        this.GlobeZoom(this.GlobePanel.scale + 0.1);\n    }\n\n    //#endregion\n}\n"]}